:root {
    --darkSlateGray: #395e66;
    --myrtleGreen: #387d7a;
    --seaGreen: #32936f;
    --jadeGreen: #26a96c;
    --kellyGreen: #2bc016;

    --headerHeight: 120px;
    --sideNavWidth: 300px;
    --taskHeight: 100px;
}

@font-face {
    font-family: wixFont;
    src: url(Assets/WixMadeforDisplay-VariableFont_wght.ttf);
}

body {
    display: grid;
    grid-template-columns: var(--sideNavWidth) 1fr;
    grid-template-rows: var(--headerHeight) 1fr;
    height: 100vh;
    margin: 0px;
    font-family: wixFont, sans-serif;
    overflow-y: hidden;
}

button {
    border: none;
    background-color: black;
    height: 40px;
    width: 60px;
    border-radius: 6px;
    color: var(--kellyGreen);
}

button:hover {
    background-color: rgb(31, 31, 31);
    cursor: pointer;
    transition-delay: 0s !important;
    transition-duration: 0s !important;
}

.pageHeader {
    display: flex;
    justify-content: center;
    align-items: flex-start;
    padding-top: 10px;
    font-size: x-large;
    grid-area: 1 / 1 / 2 / 3;
    background-color: var(--darkSlateGray);
}

.sortButton {
    position: absolute;
    align-self: flex-end;
    right: 100px;
    margin-bottom: 10px;
    width: 87px;
}

.addTaskButton {
    position: absolute;
    align-self: flex-end;
    right: 10px;
    margin-bottom: 10px;
    width: 80px;
}

.sideNavBar {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    background-color: var(--myrtleGreen);
    z-index: 10;
    box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;
}

.projectHeader {
    display: block;
    text-align: center;
    font-size: x-large;
    width: calc(100% - 20px);
    padding: 10px;
    text-decoration: underline;
    margin-bottom: 20px;
}

.project {
    display: grid;
    grid-template-columns: 1fr 40px 40px;
    align-items: center;
    font-size: large;
    padding-left: 20px;
    padding-right: 10px;
    padding-top: 10px;
    padding-bottom: 10px;
}

.project:hover {
    background-color: rgba(0, 0, 0, .1);
    cursor: pointer;
}

.project.selected {
    background-color: rgba(0, 0, 0, .2);
}

.projectTitle {
    background-color: rgba(0, 0, 0, 0);
    font-size: large;
    width: 160px;
    padding: 6px;
    border: none;
}

.projectTitle:disabled {
    color: black;
}

.editProjectButton,
.deleteProjectButton,
.addNewProjectButton {
    background-color: rgba(0, 0, 0, 0);
    background-position: center;
    background-repeat: no-repeat;
    height: 20px;
    padding: 12px;
    justify-self: center;
}

.editProjectButton:hover,
.deleteProjectButton:hover,
.addNewProjectButton:hover {
    background-color: rgba(0, 0, 0, .1);
}

.editProjectButton {
    background-image: url(Assets/square-edit-outline.svg);
}

.deleteProjectButton {
    background-image: url(Assets/delete-outline.svg);
}

.addNewProjectButton {
    display: flex;
    color: black;
    font-size: large;
    width: 200px;
    height: 40px;
    justify-content: center;
    align-items: center;
    align-self: center;
    margin-top: 20px;
}

.addNewProjectButton::before,
.addNewProjectButton::after {
    background-image: url(Assets/bookmark-plus-outline.svg);
    margin-left: 3px;
    margin-right: 3px;
    height: 25px;
    width: 25px;
    content: "";
}

.taskContainer {
    display: flex;
    flex-direction: column;
    background-color: var(--seaGreen);
    padding: 10px;
    gap: 10px;
    overflow-y: auto;
}

.taskWrapper {
    position: relative;
    display: grid;
    gap: 10px;
    grid-template-columns: 1fr 120px 120px;
    grid-template-rows: 45px 20px 40px 80px;
    height: var(--taskHeight);
    flex-shrink: 0;
    border-radius: 6px;
    padding: 15px;
    background-color: var(--kellyGreen);
    overflow: hidden;
    transition: .5s;
    transition-timing-function: ease-in-out;
}

.taskWrapper.expanded {
    height: calc(var(--taskHeight) * 2);
}

.taskName {
    grid-area: 1 / 1 / 2 / 4;
    font-size: x-large;
}

.taskDescription {
    grid-area: 3 / 1 / 5 / 2;
    opacity: 0;
    transition-duration: .5s;
}

.taskDescription::before {
    white-space: pre-wrap;
    font-weight: bold;
    content: 'Description: \A';
}

.taskWrapper.expanded .taskDescription {
    opacity: 1;
    transition-delay: .3s;
}

.dueDate {
    grid-area: 2 / 2 / 3 / 3;
    align-self: center;
}

.dueDate::before {
    white-space: pre-wrap;
    font-weight: bold;
    content: 'Due: \A';
}

.taskImportance {
    grid-area: 2 / 3 / 3 / 4;
    align-self: center;
}

.taskImportance::before {
    font-weight: bold;
    content: 'Importance: ';
}

.chevron {
    position: absolute;
    justify-self: center;
    align-self: flex-end;
    height: 40px;
    width: 160px;
    background-image: url(Assets/chevron-up.svg);
    background-position: center;
    background-repeat: no-repeat;
    transform: rotateZ(180deg);
    transition: .5s;
}

.taskWrapper.expanded .chevron {
    transform: rotateY(180deg);
}

.editButton,
.completeButton {
    position: relative;
    bottom: 10px;
    width: 80px;
    align-self: center;
    transition-duration: .5s;
    opacity: 0;
}

.taskWrapper.expanded .editButton,
.taskWrapper.expanded .completeButton {
    opacity: 1;
    transition-delay: .3s;
}

.editButton {
    grid-area: 4 / 2 / 5 / 3;
}

.completeButton {
    grid-area: 4 / 3 / 5 / 4;
}

.addTaskPopup,
.warningPopup {
    position: absolute;
    transform: translateY(-400px);
    transition-duration: .5s;
    height: 1px;
    width: 1px;
    justify-self: center;
    overflow: hidden;
    z-index: 20;
    border: solid black 2px;
    border-radius: 6px;
}

.addTaskPopup {
    display: flex;
    justify-content: center;
    align-items: center;
}

.warningPopup {
    display: grid;
}

.addTaskPopup > *,
.warningPopup > *,
.warningPopup {
    opacity: 0;
}

.addTaskPopup.active,
.warningPopup.active {
    background-color: var(--myrtleGreen);
    padding-left: 3px;
    padding-right: 3px;
}

.addTaskPopup.active {
    transform: translateY(10vmax);
    height: min(70vmax, 450px);
    width: min(80vw, 400px);
}

.warningPopup.active {
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 2fr 1fr;
    height: 150px;
    width: 200px;
    transform: translateY(15vmax);
}

.addTaskPopup.active > *,
.warningPopup.active > *,
.warningPopup.active {
    opacity: 1;
}

.warningText {
    grid-area: 1 / 1 / 2 / 3;
    text-align: center;
    padding-top: 10px;
}

.warningCancel,
.warningDelete {
    justify-self: center;
}

fieldset {
    height: 93%;
    width: 90%;
    border-radius: 6px;
}

label {
    margin-bottom: -18px;
}

.formList {
    display: flex;
    flex-direction: column;
    gap: 20px;
}

.radioWrap {
    display: flex;
}

.formButtonWrap {
    display: flex;
    justify-content: space-evenly;
    width: 100%;
}

textarea {
    resize: none;
}

@media (max-width: 1024px) {
    body {
        grid-template-columns: 0px 1fr;
        transition-duration: .4s;
    }

    body.mobileMenu {
        grid-template-columns: 250px 1fr;
    }

    .taskContainer {
        grid-area: 2 / 1 / 3 / 3;
    }

    .sideNavBar {
        grid-area: 2 / 1 / 3 / 1;
    }

    .sideNavBar > * {
        position: relative;
        left: -200px;
        transition-duration: .4s;
    }

    body.mobileMenu .sideNavBar > *{
        left: 0px;
    }

    .projectTitle {
        width: 100px;
    }

    .expandSideNavButton {
        position: absolute;
        top: 30px;
        left: 30px;
        background-image: url(Assets/menu.svg);
        background-size: cover;
        height: 40px;
        width: 40px;
        border: none;
        background-color: var(--darkSlateGray);
    }

    button:hover {
        background-color: black;
    }

    .expandSideNavButton:hover {
        background-color: var(--darkSlateGray);
    }

    .taskWrapper {
        grid-template-columns: 1fr 1fr;
        padding-right: 5px;
    }

    .taskName {
        grid-area: 1 / 1 / 2 / 3;
    }

    .dueDate {
        grid-area: 2 / 1 / 3 / 2;
    }

    .taskImportance {
        grid-area: 2 / 2 / 3 / 3;
    }

    .taskDescription {
        position: relative;
        grid-area: 3 / 1 / 5 / 4;
    }

    .editButton,
    .completeButton {
        position: relative;
        bottom: 10px;
        width: 80px;
        justify-self: center;
        align-self: center;
    }

    .editButton {
        grid-area: 4 / 1 / 5 / 2;
    }

    .completeButton {
        grid-area: 4 / 2 / 5 / 3;
    }
}